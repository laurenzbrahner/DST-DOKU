{
  "hash": "63f6d67c2352ee93dc395068647c0c65",
  "result": {
    "markdown": "# Datenvisualisierung\n\nMit den gewonnen Erkenntnissen aus der Exploration, können nun Visualisierungen erstellt werden. Ziel ist es, aus den gewonnen Erkenntnissen der Exploration visuell ansprechende und aussagekräftige Visualisierungen mit Altair zu erstellen.\n\n## Grundelegendes Design\n\nUm ein durchgehendes Design zu ermöglichen habe ich zuerst Konfigurationsparameter für Altair Plots erstellt. Diese sind so gut wie gleich in den verschiedenen Diagrammtypen:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n\"\"\"\n.properties(\n    title={'text': 'Beispiel', 'dy': -20},\n    background='#F5F5F5',\n    width=600,\n    height=400\n).configure_title(\n    fontSize=25,\n    anchor='start'\n).configure_axis(\n    labelFontSize=14,\n    titleFontSize=20,\n    titleColor='gray',\n    labelColor='gray',\n    titlePadding=12,\n    grid=False\n).configure_legend(\n    titleFontSize=16,\n    labelFontSize=14\n).configure_view(\n    strokeWidth=0,\n).configure_axisX(\n    labelAngle=0,\n    titleAnchor='start'\n).configure_axisY(\n    titleAnchor='end'\n)\n\n\"\"\"\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n\"\\n.properties(\\n    title={'text': 'Beispiel', 'dy': -20},\\n    background='#F5F5F5',\\n    width=600,\\n    height=400\\n).configure_title(\\n    fontSize=25,\\n    anchor='start'\\n).configure_axis(\\n    labelFontSize=14,\\n    titleFontSize=20,\\n    titleColor='gray',\\n    labelColor='gray',\\n    titlePadding=12,\\n    grid=False\\n).configure_legend(\\n    titleFontSize=16,\\n    labelFontSize=14\\n).configure_view(\\n    strokeWidth=0,\\n).configure_axisX(\\n    labelAngle=0,\\n    titleAnchor='start'\\n).configure_axisY(\\n    titleAnchor='end'\\n)\\n\\n\"\n```\n:::\n:::\n\n\n### Allgemeine Eigenschaften\n\n- `.properties()`: Allgemeine Eigenschaften des Diagramms.\n  - `title`: Legt den Titel des Diagramms fest. \n  - `dy`  definiert die vertikale Verschiebung \n  - `background`: Hintergrundfarbe des Diagramms.\n  - `width`: Bestimmt die Breite des Diagramms in Pixeln. \n  - `height`: Bestimmt die Höhe des Diagramms in Pixeln.\n\n### Titelkonfiguration\n\n- `.configure_title()`: Anapssungen für den Diagrammtitel.\n  - `fontSize`: Die Schriftgröße des Titels in Pixeln.\n  - `anchor`: Die Ausrichtung des Titels.\n\n\n\n### Achsenkonfiguration\n\n- `.configure_axis()`: konfiguration für beide Achsen (X & Y).\n  - `labelFontSize`: Schriftgröße der Achsenbeschriftungen.\n  - `titleFontSize`: Schriftgröße des Achsentitels.\n  - `titleColor` und `labelColor`: Die Farbe des Achsentitels und der Beschriftungen.\n  - `titlePadding`: Der Abstand zwischen dem Achsentitel und den Achsenbeschriftungen. \n  - `grid`: Steuert die Anzeige des Gitternetzes. `False` bedeutet, dass kein Gitternetz gezeigt wird.\n\n### Legendenkonfiguration\n\n- `.configure_legend()`: Passt das Aussehen der Legende an.\n  - `titleFontSize`: Die Schriftgröße des Legendentitels. \n  - `labelFontSize`: Die Schriftgröße der Legendenbeschriftungen.\n\n### Ansichtskonfiguration\n\n- `.configure_view()`: Konfiguation der Ansicht.\n  - `strokeWidth`: Die Breite des Rahmens um das Diagramm. `0` bedeutet, dass kein Rahmen gezeigt wird.\n\n### Spezifische Achsenkonfigurationen\n\n- `.configure_axisX()` und `.configure_axisY()`: Spezifische Konfigurationen für die X- und Y-Achse.\n  - `labelAngle`: Der Winkel der Achsenbeschriftungen auf der X-Achse. `0`  bedeutet eine horizontale Ausrichtung.\n  - `titleAnchor`: Die Ausrichtung des Achsentitels.\n\n<br/>\n\n  ***Beachte:*** Die Hintergrundfarbe, Schriftgröße und die width und height können in späteren Darstellungen in der quarto-Präsentation oder in dem Dashboard variieren.\n\n\n## Barplots\n\nFür die Erstellung von Barplots haben sich meiner Meinung nach die Anzahl der Songs nach Tonart und Keys geeignet. Da man mit einem Barplot perfekt unterschiede in verschiedenen Kategorieren aufzeigen kann. \n\n**Tonart:**\n\nDafür habe ich zuerst ein Barplot mit den zwei verschiedenen Tonarten auf der X-Achse Erstellt. Um den Unterschied besser aufzuzeigen, habe ich die Skalierung auf der Y-Achse geändert und eine Linie auf der Höhe des Maximalwerts plaziert. Das ganze habe ich mit der `alt.layer()` Funktion erreicht, die die Linie und den Plot layert.\n\n![Anzahl der Top-Songs nach Tonart](images/visualization_bar_plot_with_lines.png)\n\n**Keys:**\n\nHierfür habe ich einen Barplot mit den verschiedenen Keys auf der X-Achse erstellt. Auch hier habe ich um den Unterschied besser aufzuzeigen, die Skalierung auf der Y-Achse geändert. Außerdem habe ich wieder eine Linie durch den Maximalwert gezogen und eine gestrichelte Linie durch den Minimalwert. Um dieses Linien und somit den Unterschied besser hervorzuheben, habe ich dem Barplot eine geringere opacity gegeben. Auch hier habe ich wieder mit `alt.layer()` gearbeitet.\n\n![Anzahl der Top-Songs nach Key](images/keys.png)\n\n",
    "supporting": [
      "datenvisualisierung_files"
    ],
    "filters": [],
    "includes": {}
  }
}